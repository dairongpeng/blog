<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 当我胡说八道</title>
    <link>https://dairongpeng.github.io/blog/post/</link>
    <description>Recent content in Posts on 当我胡说八道</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-ch</language>
    <copyright>Copyright © 2022–2023, dairongpeng; all rights reserved.</copyright>
    <lastBuildDate>Tue, 28 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://dairongpeng.github.io/blog/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>配置容器开发环境</title>
      <link>https://dairongpeng.github.io/blog/post/230228-%E9%85%8D%E7%BD%AE%E5%AE%B9%E5%99%A8%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://dairongpeng.github.io/blog/post/230228-%E9%85%8D%E7%BD%AE%E5%AE%B9%E5%99%A8%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid>
      <description>背景 日常开发中，如果我们有不同平台的开发环境，需要适应多个平台的特性，增加工作负担。例如我会在家中使用配置较高的PC开发，在公司会使用Mac开发。假如我们能不依赖本地操作系统的平台，快速构建目标开发环境，并且该环境可以轻松的移植，就完美解决了这个问题。
Docker容器开发环境 Docker容器开发环境是一种远程开发的思路，详细操作步骤Microsoft介绍的很详细。借助 Visual Studio Code 将 Docker 容器用作开发环境 目标环境准备 CentOS Vim Git Golang 准备Dockerfile FROM centos:8 LABEL maintainer=&amp;#34;dairongpeng dairongpeng@foxmail.com&amp;#34; ARG BASE_GOPROXY=direct,https://goproxy.cn,https://goproxy.io ARG HOME=/root ARG WORKSPACE=${HOME}/workspace ENV LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8 LC_COLLATE=C LC_CTYPE=en_US.UTF-8 PS1=&amp;#39;[\u@dev \W]\$ &amp;#39; RUN sed -i &amp;#39;s/mirrorlist/#mirrorlist/g&amp;#39; /etc/yum.repos.d/CentOS-* \ &amp;amp;&amp;amp; sed -i &amp;#39;s|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g&amp;#39; /etc/yum.repos.d/CentOS-* RUN yum install -y net-tools \ &amp;amp;&amp;amp; yum install -y wget \ &amp;amp;&amp;amp; yum install -y vim # 替换Yum镜像源 RUN mv /etc/yum.repos.d /etc/yum.repos.d.bak &amp;amp;&amp;amp; mkdir /etc/yum.</description>
    </item>
    
  </channel>
</rss>
